/*	(c) 2007 BEA Systems, Inc. All Rights Reserved. */


#include <stdio.h>
#include <string.h>

#include <time.h>
#ifdef WIN32
#include <conio.h>
#endif


EXEC SQL include sqlca;

#define SQLNOTFOUND  100
#define QLDEADLOCK 600

char errmsg[200];
int  buff_size = 200;
int  msg_len;

char *
#if defined(__STDC__) || defined(__cplusplus)
getstr(char *str, long sqlnum)

#else

getstr(str, sqlnum)
char *str;
long sqlnum;
#endif

{
	switch (sqlnum) {
	case SQLNOTFOUND:
		(void)strcpy(errmsg,"Invalid ");
		(void)strcat(errmsg,str);
		(void)strcat(errmsg," number");
		break;
	case QLDEADLOCK:
		(void)strcpy(errmsg,str);
		(void)strcat(errmsg," busy try again");
		break;
	default:
		strcpy(errmsg, "");
		sqlglm(errmsg, &buff_size, &msg_len);
		/* Null terminate */
		errmsg[msg_len] = '\0';
		break;
	}
	return(errmsg);
}


char *
#if defined(__STDC__) || defined(__cplusplus)
gettime (void)
#else
gettime ()
#endif
{
    time_t	clk_ticks ;
    char *	timestr = NULL ;

    clk_ticks = time ((time_t) 0) ;	/* get # sec since Jan 1, 1970 */
    timestr = ctime (&clk_ticks) ;	/* conv to date-time text string */
    (void)strtok (timestr, "\n") ;   		/* delete the '\n'  char */
    (void)userlog ("strtok, %s", timestr);
    return timestr;
}


#ifdef WIN32

#include <conio.h>
// Get the password for security from the console.

#define  MAXPASSLEN	8

char *
getpass(const char *prompt)
{
	char	*p;
	int	c;
	static char  passwd[MAXPASSLEN+1];

	(void) fputs(prompt, stderr);
	for(p=passwd; (c = getch()) != '\r' && c != EOF; ) {
		if(p < &passwd[MAXPASSLEN])
			*p++ = (char)c;
	}
	*p = '\0';
	(void) putc('\n', stderr);
	return(passwd);
}
#endif


/* End of file */
